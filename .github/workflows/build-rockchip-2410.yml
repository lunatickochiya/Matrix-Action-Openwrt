name: Build Rockchip 24.10

# Fix for broken build: https://github.com/softprops/action-gh-release/issues/236
permissions:
  contents: write
  actions: write

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      MACH:
        description: 'Choose machine'
        required: true
        default: 'mpc1917'
        type: choice
        options:
        - 'tpm312'
        - 'mpc1917'
        - 'r08'
        - 'fmx1'
      REPO:
        description: 'Choose repo'
        required: true
        default: 'openwrt-24.10'
        type: choice
        options:
        - 'openwrt-24.10'
        - 'main'
      SETIP:
        description: 'Set ip address'
        default: '192.168.6.1'
        required: false
        type: choice
        options:
        - '192.168.6.1'
        - '192.168.7.1'
        - '192.168.8.1'
        - '192.168.9.1'
        - '192.168.10.1'
        - '192.168.11.1'
        - '192.168.12.1'
        - '192.168.16.1'
        - '192.168.17.1'
        - '192.168.18.1'
        - '192.168.19.1'
        - '192.168.20.1'
        - '192.168.22.1'
        - '192.168.33.1'
        - '192.168.66.1'
        - '192.168.67.1'
        - '192.168.77.1'
        - '192.168.78.1'
        - '192.168.87.1'
        - '192.168.88.1'
        - '192.168.89.1'
        - '192.168.96.1'
        - '192.168.99.1'
        - '192.168.100.1'
        - '192.168.110.1'
        - '192.168.120.1'
        - '192.168.160.1'
        - '192.168.166.1'
        - '192.168.167.1'
        - '192.168.177.1'
        - '192.168.188.1'
        - '172.16.0.1'
        - '172.18.0.1'
        - '10.0.0.1'
        - '10.88.0.1'

      SFE_BUILDIN:
        description: 'Build sfe'
        default: 'true'
        type: choice
        options:
        - 'true'
        - 'false'

      patch_repo:
        description: 'Use json patch repo true(1) or false(0) See ReadME'
        required: true
        default: '{"OPENSSL_3_5": "1", "BCM_FULLCONE": "1", "MAC80211_616": "0", "TRY_BBR_V3": "1"}'

      config_repo:
        description: 'Use json config repo true(1) or false(0) See ReadME'
        required: true
        default: '{"Cache": "1", "UPLOAD_RELEASE": "1", "ALLKMOD": "1"}'
env:
  TZ: Asia/Shanghai

jobs:
  prepare:
    runs-on: ubuntu-22.04
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    strategy:
      matrix:
        include:
        - rockchip: mpc1917
        - rockchip: tpm312
        - rockchip: r08
        - rockchip: fmx1

    steps:
      - name: 检查
        uses: actions/checkout@main

      - name: 生成矩阵配置
        id: set-matrix
        run: |
          if [ "${{ github.event.inputs.MACH }}" == "${{ matrix.rockchip }}" ] && [ "${{ github.event.inputs.REPO }}" == "openwrt-24.10" ]; then
            matrix={\"include\":[{\"target\":\"rockchip-ipt\",\"repo\":\"openwrt-24.10\"},{\"target\":\"rockchip-nft\",\"repo\":\"openwrt-24.10\"}]}
          elif [ "${{ github.event.inputs.MACH }}" == "${{ matrix.rockchip }}" ] && [ "${{ github.event.inputs.REPO }}" == "main" ]; then
            matrix={\"include\":[{\"target\":\"rockchip-ipt\",\"repo\":\"main\"},{\"target\":\"rockchip-nft\",\"repo\":\"main\"}]}
          fi
          echo "Generated matrix: "$matrix""
          echo "matrix=$matrix" >> $GITHUB_OUTPUT

  build:
    runs-on: Ubuntu-22.04
    needs: prepare
    strategy:
      matrix: ${{ fromJSON(needs.prepare.outputs.matrix) }}
    name: Build ${{github.event.inputs.MACH}} openwrt ${{ github.event.inputs.REPO }}
    env:
      Matrix_Target: ${{ matrix.target }}
      Target_CFG_Machine: ${{github.event.inputs.MACH}}
      OpenWrt_PATCH_FILE_DIR: openwrt-2410
    
    steps:
    - name: 检查
      uses: actions/checkout@main

    - name: 释放Ubuntu磁盘空间
      uses: endersonmenezes/free-disk-space@v2
      with:
        remove_android: true
        remove_dotnet: true
        remove_haskell: true
        remove_tool_cache: true
        remove_swap: true
        remove_packages: "azure-cli google-cloud-cli microsoft-edge-stable google-chrome-stable firefox postgresql* temurin-* *llvm* mysql* dotnet-sdk-*"
        remove_packages_one_command: true
        remove_folders: "/usr/share/swift /usr/share/miniconda /usr/share/az* /usr/share/glade* /usr/local/lib/node_modules /usr/local/share/chromium /usr/local/share/powershell"
        testing: false

    - name: 初始化环境
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        chmod +x gen-sha256sum.sh add-test-packages.sh add-sfe-packages.sh core.sh
        $GITHUB_WORKSPACE/core.sh init-pkg-env

    - name: 设置GITHUB_ENV
      id: env
      env:
        PATCH_JSON_INPUT: ${{ github.event.inputs.patch_repo }}
        CONFIG_JSON_INPUT: ${{ github.event.inputs.config_repo }}
      run: |
        echo ${{matrix.target}}
        $GITHUB_WORKSPACE/core.sh init-gh-env-2410

    - name: 导入机器及安装包config
      id: cfg
      run: |
        if [ ${{ env.TEST_KERNEL }} = 1 ]; then
        $GITHUB_WORKSPACE/$DIY_SH add-test-config
        echo "Kernel_Test=_Kernel_Test_Ver" >> $GITHUB_ENV
        fi
        $GITHUB_WORKSPACE/core.sh init-math-config
        $GITHUB_WORKSPACE/core.sh init-openwrt-pkg-config

    - name: 克隆源代码
      working-directory: /workdir
      id: clone
      run: |
        df -hT $PWD
        git clone $REPO_URL -b $REPO_BRANCH openwrt --single-branch
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt
        cd openwrt
        sed -i \
          -e 's|https://git.openwrt.org/feed/packages.git;openwrt-24.10|https://github.com/openwrt/packages.git;openwrt-24.10|' \
          -e 's|https://git.openwrt.org/project/luci.git;openwrt-24.10|https://github.com/openwrt/luci.git;openwrt-24.10|' \
          -e 's|https://git.openwrt.org/feed/routing.git;openwrt-24.10|https://github.com/openwrt/routing.git;openwrt-24.10|' \
          -e 's|https://git.openwrt.org/feed/telephony.git;openwrt-24.10|https://github.com/openwrt/telephony.git;openwrt-24.10|' \
          feeds.conf.default
        sed -i '$a src-git lunatic7 https://github.com/lunatickochiya/actionbased-openwrt-packages.git' feeds.conf.default
        git clone https://${{ secrets.MY_SECRET_TOKEN }}@github.com/lunatickochiya/tpm312.git
        bash tpm312/cus.sh
        $GITHUB_WORKSPACE/$DIY_SH rockpatch
        echo "status=success" >> $GITHUB_OUTPUT

    - name: 增加磁盘空间
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        $GITHUB_WORKSPACE/core.sh ln-openwrt

    - name: Patch 自定义
      id: patch
      run: |
        $GITHUB_WORKSPACE/core.sh init-openwrt-patch-2410
        echo "status=success" >> $GITHUB_OUTPUT

    - name: 添加 SFE
      if: github.event.inputs.SFE_BUILDIN == 'true'
      id: sfe
      run: |
        $GITHUB_WORKSPACE/core.sh add-openwrt-sfe-2410
        echo "status=success" >> $GITHUB_OUTPUT
        echo "SFE=_SFE" >> $GITHUB_ENV

    - name: 自定义安装包(优先于feeds)
      if: steps.clone.outputs.status == 'success'
      id: files
      run: |
        mkdir openwrt/feeds-bump
        [ -d feeds-packages/openwrt-24.10/feeds/ ] && mv -f feeds-packages/openwrt-24.10/feeds/* openwrt/feeds-bump
        if [ ${{github.event.inputs.KERNEL66}} = true ]; then
        rm -rf openwrt-2410/mypatch-2410-${{matrix.target}}/0004-fix.patch
        fi
        if [ "${{ matrix.repo }}" == "openwrt-24.10" ]; then
        [ -d openwrt-2410/mypatch-2410-${{matrix.target}} ] && mv -f openwrt-2410/mypatch-2410-${{matrix.target}} openwrt/mypatch
        elif [ "${{ matrix.repo }}" == "main" ]; then
        [ -d openwrt-main/mypatch-main-${{matrix.target}} ] && mv -f openwrt-main/mypatch-main-${{matrix.target}} openwrt/mypatch
        fi
        [ -d package ] && mv -f package/* openwrt/package
        [ -d openwrt-2410/mypatch-2410 ] && mv -f openwrt-2410/mypatch-2410 openwrt/mypatch-2410
        [ -d openwrt-2410/package-for-2410 ] && cp -r openwrt-2410/package-for-2410/* openwrt/package
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_SH patch-openwrt
        cd ../
        echo "status=success" >> $GITHUB_OUTPUT

    - name: 设置 IP 地址
      if: github.event.inputs.SETIP != '192.168.66.1'
      id: setip
      run: |
        IPSET_VALUE="${{ github.event.inputs.SETIP }}"
        sed -i "s/192\.168\.66\.1/$IPSET_VALUE/g" openwrt/package/kochiya/autoset/files/def_uci/zzz-autoset*
        grep 'set network.lan.ipaddr=' openwrt/package/kochiya/autoset/files/def_uci/zzz-autoset*
        echo "status=success" >> $GITHUB_OUTPUT

    - name: 更新 & 安装 feeds
      if: steps.files.outputs.status == 'success'
      id: feeds
      run: |
        cd openwrt
        ./scripts/feeds update -a
        ./scripts/feeds install -a
        sed -i 's/--set=llvm\.download-ci-llvm=false/--set=llvm.download-ci-llvm=true/' feeds/packages/lang/rust/Makefile
        grep -q -- '--ci false \\' feeds/packages/lang/rust/Makefile || sed -i '/x\.py \\/a \        --ci false \\' feeds/packages/lang/rust/Makefile
        echo "status=success" >> $GITHUB_OUTPUT

    - name: 自定义配置（修复feeds）
      if: steps.feeds.outputs.status == 'success'
      id: config
      run: |
        if [ ${{github.event.inputs.TEST-KERNEL}} = true ]; then
        mv -f openwrt-2410/K61/tele openwrt/feeds/telephony
        mv -f openwrt-2410/K61/packages/* openwrt-2410/feeds-package-patch-2410
        fi
        if [ "${{ matrix.repo }}" == "openwrt-24.10" ]; then
        [ -d openwrt-2410/lunatic7-revert ] && mv -f openwrt-2410/lunatic7-revert openwrt/feeds/lunatic7/lunatic7-revert
        [ -d openwrt-2410/luci-patch-2410 ] && mv -f openwrt-2410/luci-patch-2410 openwrt/feeds/luci/luci-patch-2410
        [ -d openwrt-2410/feeds-package-patch-2410 ] && mv -f openwrt-2410/feeds-package-patch-2410 openwrt/feeds/packages/feeds-package-patch-2410
        elif [ "${{ matrix.repo }}" == "main" ]; then
        [ -d openwrt-main/lunatic7-revert ] && mv -f openwrt-main/lunatic7-revert openwrt/feeds/lunatic7/lunatic7-revert
        [ -d openwrt-main/luci-patch ] && mv -f openwrt-main/luci-patch openwrt/feeds/luci/luci-patch
        [ -d openwrt-main/feeds-package-patch ] && mv -f openwrt-main/feeds-package-patch openwrt/feeds/packages/feeds-package-patch
        fi
        [ -e files ] && mv files openwrt/files
        [ -e package-configs ] && mv package-configs openwrt/package-configs
        [ -e machine-configs/${{matrix.target}}.config ] && mv -f machine-configs/${{matrix.target}}.config openwrt/package-configs/.config
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_SH ${{matrix.target}}
        if [ ${{github.event.inputs.TEST-KERNEL}} = true ]; then
        $GITHUB_WORKSPACE/$DIY_SH patchtele
        fi
        make defconfig
        $GITHUB_WORKSPACE/$DIY_SH_RFC ${{matrix.target}}
        if [ ${{github.event.inputs.KERNEL66}} = true ]; then
        $GITHUB_WORKSPACE/$DIY_SH feeds-replace
        fi
        echo "status=success" >> $GITHUB_OUTPUT

    - name: 添加kmod
      if: steps.config.outputs.status == 'success' && env.ALLKMOD == '1'
      id: config2
      run: |
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_SH_RFC kmod-kernel66
        make defconfig
        $GITHUB_WORKSPACE/$DIY_SH_RFC kmod-kernel66
        make defconfig
        $GITHUB_WORKSPACE/$DIY_SH_RFC kmod-kernel66
        make defconfig
        $GITHUB_WORKSPACE/$DIY_SH_RFC ${{matrix.target}}
        echo "status=success" >> $GITHUB_OUTPUT

    - name: Run awk command
      if: steps.config.outputs.status == 'success'
      working-directory: ./openwrt
      run: |
        echo "------------------------"
        awk '/CONFIG_LINUX/ { print }' .config
        awk '/${{matrix.target}}/ { print }' .config
        awk '/${{github.event.inputs.MACH}}/ { print }' .config
        echo "------------------------"
        awk '/docker/ { print }' .config
        echo "------------------------"
        awk '/DOCKER/ { print }' .config
        echo "------------------------"
        awk '/store/ { print }' .config
        echo "------------------------"
        awk '/perl/ { print }' .config
        echo "------------------------"
        awk '/dnsmasq/ { print }' .config
        echo "------------------------"
        awk '/passwall/ { print }' .config
        echo "------------------------"
        awk '/nft/ { print }' .config
        echo "------------------------"
        awk '/firewall/ { print }' .config
        echo "------------------------"
        awk '/fullcone/ { print }' .config
        echo "------------------------"
        awk '/syncthing/ { print }' .config
        echo "------------------------"
        awk '/shadowsocks-rust/ { print }' .config
        echo "------------------------"
        awk '/GCC_VERSION/ { print }' .config
        echo "------------------------"
        awk '/CONFIG_PACKAGE_kmod/ { print }' .config
        echo "------------------------"
        awk '/turboacc/ { print }' .config

    - name: 下载包文件
      if: steps.config.outputs.status == 'success'
      run: |
        cd openwrt
        make download -j$(nproc)
        find dl -size -1024c -exec rm -f {} \;

    - name: 缓存
      uses: stupidloud/cachewrtbuild@main
      if: env.Cache == '1' && !cancelled()
      with:
        ccache: 'true'
        mixkey: ${{ matrix.target }}
        clean: ${{ contains(github.event.action, 'nocache') }}
        prefix: ${{ github.workspace }}/openwrt

    - name: 编译固件
      id: compile
      working-directory: ./openwrt
      run: |
        echo -e "$(($(nproc)+1)) thread compile"
        make -j$(($(nproc)+1)) || make -j1 V=s
        echo "status=success" >> $GITHUB_OUTPUT
     
    - name: 检查空间使用情况
      if: (!cancelled())
      run: df -hT

    - name: 上传bin目录
      uses: actions/upload-artifact@main
      continue-on-error: true
      if: steps.compile.outputs.status == 'success' && env.UPLOAD_BIN_DIR == 'true'
      with:
        name: ${{ env.date3 }}_${{matrix.target}}_${{ matrix.repo }}
        path: |
          openwrt/bin/

    - name: 打包ipk成zip文件
      id: afb
      continue-on-error: true
      if: steps.compile.outputs.status == 'success' && !cancelled()
      run: |
        $GITHUB_WORKSPACE/$DIY_SH_AFB
        echo "status=success" >> $GITHUB_OUTPUT

    - name: 整理文件
      id: organize
      if: env.UPLOAD_FIRMWARE == 'true' && steps.afb.outputs.status == 'success' && !cancelled()
      run: |
        mkdir firmware ipks
        cp -u -f openwrt/kernelipks.zip ipks
        cp -u -f openwrt/ipks.zip ipks
        [ ${{ env.UPLOAD_RELEASE}} = 1 ] && cp -u -f openwrt/kernelipks.zip firmware
        [ ${{ env.UPLOAD_RELEASE}} = 1 ] && cp -u -f openwrt/ipks.zip firmware
        cp openwrt/.config  ./firmware/${{matrix.target}}.config
        cp openwrt/build_dir/target-*/linux-*/linux-*/.config ./firmware/${{matrix.target}}_kernel.config
        mv -f openwrt/bin/targets/*/*/{*combined*,*ext4*,*sdk*,*imagebuilder*,*buildinfo*,*manifest*,*json*,*sha256sums*} ./firmware/ 2>/dev/null || true
        [ $UPLOAD_SYSUPGRADE = true ] && mv -f openwrt/bin/targets/*/*/{*squashfs*,*sysupgrade*} ./firmware/ 2>/dev/null || true
        cd firmware
        echo "v${{ env.date2 }}" > version.txt
        echo ${{matrix.target}} >> version.txt
        rm -rf sha256sums
        echo "FIRMWARE=$PWD" >> $GITHUB_ENV
        echo "status=success" >> $GITHUB_OUTPUT

    - name: 上传firmware目录
      uses: actions/upload-artifact@main
      continue-on-error: true
      if: steps.organize.outputs.status == 'success' && env.UPLOAD_FIRMWARE == 'true'
      with:
        name: ${{ env.date3 }}_${{matrix.target}}_firmware_${{ matrix.repo }}-${{github.event.inputs.MACH}}-${{ github.event.inputs.SETIP }}${{ env.Kernel_Test }}${{ env.BCM_FULLCONE_NAME }}${{ env.SFE }}${{ env.TRY_BBR_V3_NAME }}${{ env.OPENSSL_3_5_NAME }}${{ env.MAC80211_616_NAME }}
        path: |
          firmware

    - name: 上传ipk目录
      uses: actions/upload-artifact@main
      continue-on-error: true
      if: steps.organize.outputs.status == 'success' && env.UPLOAD_IPK_DIR == 'true' && steps.afb.outputs.status == 'success'
      with:
        name: ${{ env.date3 }}_${{matrix.target}}_ipks_${{ matrix.repo }}-${{github.event.inputs.MACH}}${{ env.Kernel_Test }}${{ env.BCM_FULLCONE_NAME }}${{ env.SFE }}${{ env.TRY_BBR_V3_NAME }}${{ env.OPENSSL_3_5_NAME }}${{ env.MAC80211_616_NAME }}
        path: |
          ipks

    - name: 上传固件cowtransfer
      id: cowtransfer
      if: steps.organize.outputs.status == 'success' && env.UPLOAD_COWTRANSFER == 'true' && !cancelled()
      run: |
        curl -fsSL git.io/file-transfer | sh
        ./transfer cow --block 2621440 -s -p 64 --no-progress ${FIRMWARE} 2>&1 | tee cowtransfer.log
        echo "::warning file=cowtransfer.com::$(cat cowtransfer.log | grep https)"
        echo "url=$(cat cowtransfer.log | grep https | cut -f3 -d" ")" >> $GITHUB_OUTPUT

    - name: 上传固件WeTransfer
      id: wetransfer
      if: steps.organize.outputs.status == 'success' && env.UPLOAD_WETRANSFER == 'true' && !cancelled()
      run: |
        curl -fsSL git.io/file-transfer | sh
        ./transfer wet -s -p 16 --no-progress ${FIRMWARE} 2>&1 | tee wetransfer.log
        echo "::warning file=wetransfer.com::$(cat wetransfer.log | grep https)"
        echo "url=$(cat wetransfer.log | grep https | cut -f3 -d" ")" >> $GITHUB_OUTPUT

    - name: 生成发布标签
      id: tag
      if: steps.organize.outputs.status == 'success' && env.UPLOAD_RELEASE == '1' && !cancelled()
      run: |
        touch release.txt
        $GITHUB_WORKSPACE/gen-sha256sum.sh
        echo "# 当前固件IP地址："${{ github.event.inputs.SETIP }}" " >> release.txt
        [ $UPLOAD_COWTRANSFER = true ] && echo "🔗 [Cowtransfer](${{ steps.cowtransfer.outputs.url }})" >> release.txt
        [ $UPLOAD_WETRANSFER = true ] && echo "🔗 [WeTransfer](${{ steps.wetransfer.outputs.url }})" >> release.txt
        echo "🔗 ${{ env.BCM_FULLCONE_NAME }}${{ env.SFE }}${{ env.TRY_BBR_V3_NAME }}${{ env.OPENSSL_3_5_NAME }}" >> release.txt
        echo "status=success" >> $GITHUB_OUTPUT

    - name: 上传固件发布
      uses: softprops/action-gh-release@v2
      if: steps.tag.outputs.status == 'success' && !cancelled()
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        files: "${{ env.FIRMWARE }}/*"
        name: ${{ env.date }} ${{matrix.target}}-${{github.event.inputs.MACH}}-${{ matrix.repo }}
        tag_name: ${{ env.date }}_${{matrix.target}}-${{github.event.inputs.MACH}}-${{ matrix.repo }}
        body_path: release.txt

    - name: 删除工作流
      uses: Mattraks/delete-workflow-runs@main
      continue-on-error: true
      with:
        retain_days: 6
        keep_minimum_runs: 9

    - name: 删除旧版本
      uses: dev-drprasad/delete-older-releases@master
      continue-on-error: true
      if: env.UPLOAD_RELEASE == '1' && !cancelled()
      with:
        keep_latest: 24
        delete_tags: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
